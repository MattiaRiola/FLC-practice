/*************************
 Parser
**************************/

import java_cup.runtime.*;
import java.util.*;
import java.io.*;


parser code 	{:
    
    public void report_error(String message, Object info) {
        StringBuffer m = new StringBuffer(message);
        if (info instanceof Symbol) {
            if (((Symbol)info).left != 1 && ((Symbol)info).right != 1) {
                if (((Symbol)info).left != -1 && ((Symbol)info).right != -1) {
                    int line = (((Symbol)info).left) + 1;
                    int column = (((Symbol)info).right) + 1;
                    m.append(" (line " + line + " column " + column + ")");
                }
            }
            System.err.println(m);
        }
    }
    
    public Object stack(int position) {
        return (((Symbol)stack.elementAt(tos + position)).value);
    }
:};




//////////////////////////////////
///// SYMBOLS DECLARATION
/////////////////////////////////

terminal S, SEP;
terminal String ID;
terminal Integer INT;

non terminal prog ;
non terminal String IDL ; 


//////////////////////////////////
///// GRAMMAR
/////////////////////////////////

start with prog;

prog ::= IDL:x S {: System.out.println("\nSyntax is correct"); System.out.println("RESULT: "+x); :}
;

IDL ::= ID:x {: RESULT = x; :} | IDL:y ID:x {: RESULT = y + "_" + x; :}
;